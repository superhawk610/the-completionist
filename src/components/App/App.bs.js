// Generated by BUCKLESCRIPT VERSION 4.0.7, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Caml_format = require("bs-platform/lib/js/caml_format.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Detail$ReactTemplate = require("../../routes/Detail/Detail.bs.js");
var Dashboard$ReactTemplate = require("../../routes/Dashboard/Dashboard.bs.js");
var Notification$ReactTemplate = require("../Notification/Notification.bs.js");

import { hot } from 'react-hot-loader'
;

var component = ReasonReact.reducerComponent("App-ReactTemplate");

function make(_children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */(function (self) {
              console.log("mounted");
              var watcherId = ReasonReact.Router[/* watchUrl */1]((function (url) {
                      console.log(url);
                      var match = url[/* path */0];
                      if (match) {
                        switch (match[0]) {
                          case "dashboard" : 
                              return Curry._1(self[/* send */3], /* ShowDashboard */0);
                          case "show" : 
                              var match$1 = match[1];
                              if (match$1 && !match$1[1]) {
                                return Curry._1(self[/* send */3], /* ShowDetail */[Caml_format.caml_int_of_string(match$1[0])]);
                              } else {
                                return Curry._1(self[/* send */3], /* ShowDashboard */0);
                              }
                          default:
                            return Curry._1(self[/* send */3], /* ShowDashboard */0);
                        }
                      } else {
                        return Curry._1(self[/* send */3], /* ShowDashboard */0);
                      }
                    }));
              return Curry._1(self[/* onUnmount */4], (function (param) {
                            return ReasonReact.Router[/* unwatchUrl */2](watcherId);
                          }));
            }),
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              var match = self[/* state */1][/* nowShowing */2];
              return React.createElement("div", undefined, match ? ReasonReact.element(undefined, undefined, Detail$ReactTemplate.make(match[0], /* array */[])) : ReasonReact.element(undefined, undefined, Dashboard$ReactTemplate.make(/* array */[])), ReasonReact.element(undefined, undefined, Notification$ReactTemplate.make(self[/* state */1][/* showMessage */0], "I'm a notification", "Body", /* Info */8, /* array */[])), ReasonReact.element(undefined, undefined, Notification$ReactTemplate.make(self[/* state */1][/* showNotification */1], undefined, "Body", /* Warning */10, /* array */[])));
            }),
          /* initialState */(function (param) {
              return /* record */[
                      /* showMessage */false,
                      /* showNotification */false,
                      /* nowShowing : Dashboard */0
                    ];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, state) {
              console.log(action);
              if (typeof action === "number") {
                switch (action) {
                  case 0 : 
                      return /* Update */Block.__(0, [/* record */[
                                  /* showMessage */state[/* showMessage */0],
                                  /* showNotification */state[/* showNotification */1],
                                  /* nowShowing : Dashboard */0
                                ]]);
                  case 1 : 
                      return /* Update */Block.__(0, [/* record */[
                                  /* showMessage */!state[/* showMessage */0],
                                  /* showNotification */state[/* showNotification */1],
                                  /* nowShowing */state[/* nowShowing */2]
                                ]]);
                  case 2 : 
                      return /* Update */Block.__(0, [/* record */[
                                  /* showMessage */state[/* showMessage */0],
                                  /* showNotification */!state[/* showNotification */1],
                                  /* nowShowing */state[/* nowShowing */2]
                                ]]);
                  
                }
              } else {
                return /* Update */Block.__(0, [/* record */[
                            /* showMessage */state[/* showMessage */0],
                            /* showNotification */state[/* showNotification */1],
                            /* nowShowing : Detail */[action[0]]
                          ]]);
              }
            }),
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

var comp = ReasonReact.wrapReasonForJs(component, (function (_jsProps) {
        return make(/* array */[]);
      }));

export default hot(module)(comp)
;

exports.component = component;
exports.make = make;
exports.comp = comp;
/*  Not a pure module */
